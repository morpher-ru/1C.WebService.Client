// vars
Перем АдресСервера;
Перем Токен;
Перем Соединение;
Перем Заголовок;
Перем Таймаут;

Функция ПолучитьДанныеИзОтвета(Ответ)
 	ОтветСтрокой = Ответ.ПолучитьТелоКакСтроку();
	
	Чтение = Новый ЧтениеJson();
	Чтение.УстановитьСтроку(ОтветСтрокой);
	
	Если Ответ.КодСостояния = 200 Тогда
		Данные = ПрочитатьJSON(Чтение, ложь);
	    Возврат Данные;
	ИначеЕсли Ответ.КодСостояния = 400 тогда
		Данные = ПрочитатьJSON(Чтение, ложь);
		ВызватьИсключение("Ошибка: " + Данные.message);
	Иначе
		ВызватьИсключение("HTTP ошибка: " + Ответ.КодСостояния);
	КонецЕсли;		
КонецФункции

Процедура Авторизация(ТокенКлиента) Экспорт
	Токен = ТокенКлиента;	
КонецПроцедуры

Процедура СменитьСервер(Адрес, ЗащищенноеСоединение) Экспорт
	АдресСервера = Адрес;
	Если ЗащищенноеСоединение Тогда
		Соединение = Новый HTTPСоединение(АдресСервера,,,,, Таймаут, Новый ЗащищенноеСоединениеOpenSSL());
	Иначе
		Соединение = Новый HTTPСоединение(АдресСервера,,,,, Таймаут);
	КонецЕсли;
КонецПроцедуры

Функция СклонятьРусский(лемма, признаки = null) Экспорт
	ТекстЗапроса = "/russian/declension?s=" + лемма;
	
	Если признаки <> null Тогда
		ПризнакКакСтрока = "&flags=";
		Для каждого Признак из признаки Цикл
			ПризнакКакСтрока = ПризнакКакСтрока + Признак + ",";
		КонецЦикла;
		ПризнакКакСтрока = Лев(ПризнакКакСтрока, СтрДлина(ПризнакКакСтрока)-1);
		ТекстЗапроса = ТекстЗапроса + ПризнакКакСтрока;
	КонецЕсли;

	Если Токен <> null Тогда
		ТекстЗапроса = ТекстЗапроса + "&token=" + Токен;
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);	
	Запрос.Заголовки = Заголовок;
	
	Ответ = Соединение.Получить(Запрос);
	Данные = ПолучитьДанныеИзОтвета(Ответ);
	Возврат Данные;	
КонецФункции

Функция СклонятьУкраинский(лемма, признаки = null) Экспорт
	ТекстЗапроса = "/ukrainian/declension?s=" + лемма;
	
	Если признаки <> null Тогда
		ПризнакКакСтрока = "&flags=";
		Для каждого Признак из признаки Цикл
			ПризнакКакСтрока = ПризнакКакСтрока + Признак + ",";
		КонецЦикла;
		ПризнакКакСтрока = Лев(ПризнакКакСтрока, СтрДлина(ПризнакКакСтрока)-1);
		ТекстЗапроса = ТекстЗапроса + ПризнакКакСтрока;
	КонецЕсли;
	
	Если Токен <> null Тогда
		ТекстЗапроса = ТекстЗапроса + "&token=" + Токен;
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);	
	Запрос.Заголовки = Заголовок;
	
	Ответ = Соединение.Получить(Запрос);
	Данные = ПолучитьДанныеИзОтвета(Ответ);
	Возврат Данные;	
КонецФункции

Функция ПрописьРусский(число, ЕдиницаИзмерения) Экспорт
	ТекстЗапроса = "/russian/spell?n=" + число + "&unit=" + ЕдиницаИзмерения;
	Если Токен <> null Тогда
		ТекстЗапроса = ТекстЗапроса + "&token=" + Токен;
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);	
	Запрос.Заголовки = Заголовок;
	
	Ответ = Соединение.Получить(Запрос);
	Данные = ПолучитьДанныеИзОтвета(Ответ);
	Возврат Данные;	
КонецФункции

Функция ПрописьУкраинский(число, ЕдиницаИзмерения) Экспорт
	ТекстЗапроса = "/ukrainian/spell?n=" + число + "&unit=" + ЕдиницаИзмерения;
	Если Токен <> null Тогда
		ТекстЗапроса = ТекстЗапроса + "&token=" + Токен;
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);	
	Запрос.Заголовки = Заголовок;
	
	Ответ = Соединение.Получить(Запрос);
	Данные = ПолучитьДанныеИзОтвета(Ответ);
	Возврат Данные;	
КонецФункции

Функция СклонятьПрилагательноеПоРодам(прилагательное) Экспорт
	ТекстЗапроса = "/russian/genders?s=" + прилагательное; 
	Если Токен <> null Тогда
		ТекстЗапроса = ТекстЗапроса + "&token=" + Токен;
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);	
	Запрос.Заголовки = Заголовок;
	
	Ответ = Соединение.Получить(Запрос);
	Данные = ПолучитьДанныеИзОтвета(Ответ);
	Возврат Данные;	
КонецФункции

Функция ОбразоватьПрилагательные(лемма) Экспорт
	ТекстЗапроса = "/russian/adjectivize?s=" + лемма; 
	Если Токен <> null Тогда
		ТекстЗапроса = ТекстЗапроса + "&token=" + Токен;
	КонецЕсли;
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);	
	Запрос.Заголовки = Заголовок;
	
	Ответ = Соединение.Получить(Запрос);
	Данные = ПолучитьДанныеИзОтвета(Ответ);
	Возврат Данные;			
КонецФункции


// default init
Таймаут = 5;
Токен = null;
АдресСервера = "ws3.morpher.ru";
Соединение = Новый HTTPСоединение(АдресСервера,,,,, Таймаут, Новый ЗащищенноеСоединениеOpenSSL());

Заголовок = Новый Соответствие();
Заголовок.Вставить("Accept", "application/json");
